# +--------------------------------------------------------------------------------------------------------------------|
# |                                                                                                IPToken.__init__.py |
# |                                                                                             Author: Pauliv, RÃ´mulo |
# |                                                                                          email: romulopauliv@bk.ru |
# |                                                                                                    encoding: UTF-8 |
# +--------------------------------------------------------------------------------------------------------------------|

# | Imports |----------------------------------------------------------------------------------------------------------|
from .key.key_generator import KEY
from flask import Flask
# |--------------------------------------------------------------------------------------------------------------------|

# KEY CONFIG |---------------------------------------------------------------------------------------------------------|
secure_key = KEY(lowercase=True, uppercase=True, digits=True, punctuation=True)
# |--------------------------------------------------------------------------------------------------------------------|

def create_app(test_config: None = None) -> Flask:
    # Create and configure the app |-----------------------------------------------------------------------------------|
    app = Flask(__name__, instance_relative_config=True)
    app.config.from_mapping(SECRET_KEY=secure_key.generate(30))
    # |----------------------------------------------------------------------------------------------------------------|
    
    # Settings mapping condition |-------------------------------------------------------------------------------------|
    app.config.from_pyfile('config.py', silent=True) if test_config is None else app.config.from_mapping(test_config)
    # |----------------------------------------------------------------------------------------------------------------|

    # auth blueprint |-------------------------------------------------------------------------------------------------|
    from .routes import auth
    app.register_blueprint(auth.bp)
    # |----------------------------------------------------------------------------------------------------------------|

    return app